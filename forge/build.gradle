
architectury {
    platformSetupLoomIde()
    forge()
}


loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath

    forge {
        convertAccessWideners = true
        extraAccessWideners.add loom.accessWidenerPath.get().asFile.name

        mixinConfig "supplementaries-common.mixins.json"
        mixinConfig "supplementaries.mixins.json"
    }
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}


processResources {
    // input variables of this task:
    var replaceProperties = [
            minecraft_version    : minecraft_version,
            minecraft_min_version: minecraft_min_version,
            minecraft_max_version: minecraft_max_version,
            pack_format_number   : pack_format_number,

            mod_id               : mod_id,
            mod_name             : mod_name,
            mod_version          : mod_version,
            mod_license          : mod_license,
            mod_authors          : mod_authors,
            mod_description      : mod_description,
            mod_credits          : mod_credits,
            mod_homepage         : mod_homepage,
            mod_github           : mod_github,

            neo_version          : neo_version,
            neo_version_range    : neo_version_range,
            loader_version_range : loader_version_range,

            required_moonlight_version: required_moonlight_version
    ]
    // setting them as input
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta', 'update.json']) {
        expand replaceProperties + [project: project]
    }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

jar {
    classifier "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.mod_id + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        maven {
            url = "https://www.cursemaven.com"
            allowInsecureProtocol = true
        }
    }
}



// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }


repositories {
    mavenCentral()
}

dependencies {
    forge "net.neoforged:forge:${minecraft_version}-${neo_version}"
    //forge "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    //forge "net.neoforged:forge:${minecraft_version}-${neo_version}"

    implementation(annotationProcessor("io.github.llamalad7:mixinextras-common:${mixin_extras_version}"))
    implementation(include("io.github.llamalad7:mixinextras-forge:${mixin_extras_version}"))


    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }

    implementation 'org.jetbrains:annotations:22.0.0'

    modImplementation("net.mehvahdjukaar:moonlight-forge:${rootProject.moonlight_version}")
    //modImplementation("curse.maven:selene-499980:4656567")
    modCompileOnly("curse.maven:farmers-delight-398521:4679319")
    modImplementation("curse.maven:modernfix-790626:4599348")

    modCompileOnly("curse.maven:jei-238222:3928388")
    modCompileOnly("curse.maven:configured-457570:4462894")
    modCompileOnly("curse.maven:realistic-horse-genetics-339184:4685235")

    modCompileOnly("curse.maven:cc-tweaked-282001:4579775")
    modImplementation("curse.maven:curios-309927:4581099")

    modCompileOnly("curse.maven:autoreglib-250363:4100299")
    modCompileOnly("curse.maven:quark-oddities-301051:3575623")
    //modImplementation("curse.maven:quark-243121:4463411")
    modCompileOnly("curse.maven:quark-243121:4551115")

    modCompileOnly("curse.maven:framedblocks-441647:3881493")
    modCompileOnly("curse.maven:haunted-harvest-541753:4557328")
    modCompileOnly("curse.maven:waystones-245755:3835119")
    modCompileOnly("com.lowdragmc.shimmer:Shimmer-forge:1.19.2-0.1.14")
    //modImplementation("curse.maven:shimmer-627824:4028644")

    modCompileOnly("curse.maven:balm-531761:3881348")
    modCompileOnly("curse.maven:flan-forge-493246:3902633")
    modCompileOnly("curse.maven:additional-banners-230137:3901622")
    modCompileOnly("curse.maven:cave-enhancements-597562:4388535")
    modCompileOnly("curse.maven:the-bumblezone-forge-362479:4103196")
    modCompileOnly("curse.maven:bookshelf-228525:3927538")
    modCompileOnly("curse.maven:decorative-blocks-362528:3941638")
    modCompileOnly("curse.maven:map-atlases-forge-519759:4777281")
    modImplementation("curse.maven:create-328085:4626108")
    modCompileOnly("curse.maven:biomes-o-plenty-220318:4602163")
    modImplementation("curse.maven:terrablender-563928:4590487")
    modCompileOnly("curse.maven:tetra-289712:4414851")
    modCompileOnly("curse.maven:mutil-351914:3941314")
    modCompileOnly("curse.maven:breezy-690628:4788101")
    modCompileOnly("curse.maven:geckolib-388172:4064451")
    modCompileOnly("curse.maven:farmers-respite-551453:4081312")

    //modCompileOnly("curse.maven:flywheel-forge-1.20.1-0.6.9")
    modImplementation("com.jozufozu.flywheel:flywheel-forge-${flywheel_version}")
    modImplementation("com.tterrag.registrate:Registrate:${registrate_version}")
    // modImplementation("curse.maven:skinned-lanterns-414154:3970173")
    modImplementation("curse.maven:alexs-caves-924854:4806837")
    modImplementation("curse.maven:citadel-331936:4786380")


    implementation(annotationProcessor("io.github.llamalad7:mixinextras-common:${mixin_extras_version}"))
    implementation(include("io.github.llamalad7:mixinextras-forge:${mixin_extras_version}"))

    // modImplementation ("curse.maven:texture-dump-319039:3573998")
}
